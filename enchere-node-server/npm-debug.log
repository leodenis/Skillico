0 info it worked if it ends with ok
1 verbose cli [ 'C:\\Program Files (x86)\\nodejs\\\\node.exe',
1 verbose cli   'C:\\Program Files (x86)\\nodejs\\node_modules\\npm\\bin\\npm-cli.js',
1 verbose cli   'install',
1 verbose cli   'hiredis',
1 verbose cli   'redis' ]
2 info using npm@1.2.10
3 info using node@v0.8.19
4 verbose node symlink C:\Program Files (x86)\nodejs\\node.exe
5 verbose read json C:\wamp\www\git\Skillico\enchere-node-server\package.json
6 verbose read json C:\wamp\www\git\Skillico\enchere-node-server\node_modules\mysql\package.json
7 verbose read json C:\wamp\www\git\Skillico\enchere-node-server\node_modules\redis\package.json
8 verbose read json C:\wamp\www\git\Skillico\enchere-node-server\node_modules\socket.io\package.json
9 verbose read json C:\wamp\www\git\Skillico\enchere-node-server\package.json
10 verbose cache add [ 'hiredis', null ]
11 verbose cache add name=undefined spec="hiredis" args=["hiredis",null]
12 verbose parsed url { pathname: 'hiredis', path: 'hiredis', href: 'hiredis' }
13 verbose cache add [ 'redis', null ]
14 verbose cache add name=undefined spec="redis" args=["redis",null]
15 verbose parsed url { pathname: 'redis', path: 'redis', href: 'redis' }
16 silly lockFile 66e3de35-hiredis hiredis
17 verbose lock hiredis C:\Users\gaultier\AppData\Roaming\npm-cache\66e3de35-hiredis.lock
18 silly lockFile b840fc02-redis redis
19 verbose lock redis C:\Users\gaultier\AppData\Roaming\npm-cache\b840fc02-redis.lock
20 silly lockFile b840fc02-redis redis
21 silly lockFile b840fc02-redis redis
22 silly lockFile 66e3de35-hiredis hiredis
23 silly lockFile 66e3de35-hiredis hiredis
24 verbose addNamed [ 'redis', '' ]
25 verbose addNamed [ null, '' ]
26 silly lockFile fb3bbc27-redis redis@
27 verbose lock redis@ C:\Users\gaultier\AppData\Roaming\npm-cache\fb3bbc27-redis.lock
28 verbose addNamed [ 'hiredis', '' ]
29 verbose addNamed [ null, '' ]
30 silly lockFile dc014615-hiredis hiredis@
31 verbose lock hiredis@ C:\Users\gaultier\AppData\Roaming\npm-cache\dc014615-hiredis.lock
32 silly addNameRange { name: 'redis', range: '', hasData: false }
33 silly addNameRange { name: 'hiredis', range: '', hasData: false }
34 verbose url raw hiredis
35 verbose url resolving [ 'https://registry.npmjs.org/', './hiredis' ]
36 verbose url resolved https://registry.npmjs.org/hiredis
37 info trying registry request attempt 1 at 01:00:56
38 verbose etag "E55NU60C89X1XWXP3NNDE7G7B"
39 http GET https://registry.npmjs.org/hiredis
40 verbose url raw redis
41 verbose url resolving [ 'https://registry.npmjs.org/', './redis' ]
42 verbose url resolved https://registry.npmjs.org/redis
43 info trying registry request attempt 1 at 01:00:57
44 verbose etag "AGCBOT7Z975TR6NQK0DWUULKZ"
45 http GET https://registry.npmjs.org/redis
46 http 304 https://registry.npmjs.org/redis
47 silly registry.get cb [ 304,
47 silly registry.get   { server: 'CouchDB/1.2.1 (Erlang OTP/R15B03)',
47 silly registry.get     etag: '"AGCBOT7Z975TR6NQK0DWUULKZ"',
47 silly registry.get     date: 'Fri, 08 Mar 2013 00:01:04 GMT',
47 silly registry.get     'content-length': '0' } ]
48 verbose etag redis from cache
49 http 304 https://registry.npmjs.org/hiredis
50 silly registry.get cb [ 304,
50 silly registry.get   { server: 'CouchDB/1.2.1 (Erlang OTP/R15B03)',
50 silly registry.get     etag: '"E55NU60C89X1XWXP3NNDE7G7B"',
50 silly registry.get     date: 'Fri, 08 Mar 2013 00:01:04 GMT',
50 silly registry.get     'content-length': '0' } ]
51 verbose etag hiredis from cache
52 silly addNameRange number 2 { name: 'redis', range: '', hasData: true }
53 silly addNameRange versions [ 'redis',
53 silly addNameRange   [ '0.0.1',
53 silly addNameRange     '0.0.2',
53 silly addNameRange     '0.0.3',
53 silly addNameRange     '0.0.4',
53 silly addNameRange     '0.0.7',
53 silly addNameRange     '0.0.8',
53 silly addNameRange     '0.1.0',
53 silly addNameRange     '0.1.1',
53 silly addNameRange     '0.1.2',
53 silly addNameRange     '0.2.0',
53 silly addNameRange     '0.2.1',
53 silly addNameRange     '0.2.2',
53 silly addNameRange     '0.2.3',
53 silly addNameRange     '0.2.4',
53 silly addNameRange     '0.2.6',
53 silly addNameRange     '0.3.0',
53 silly addNameRange     '0.3.1',
53 silly addNameRange     '0.3.2',
53 silly addNameRange     '0.3.3',
53 silly addNameRange     '0.3.4',
53 silly addNameRange     '0.3.5',
53 silly addNameRange     '0.3.6',
53 silly addNameRange     '0.3.7',
53 silly addNameRange     '0.3.9',
53 silly addNameRange     '0.4.0',
53 silly addNameRange     '0.4.1',
53 silly addNameRange     '0.4.2',
53 silly addNameRange     '0.5.0',
53 silly addNameRange     '0.5.1',
53 silly addNameRange     '0.5.2',
53 silly addNameRange     '0.5.3',
53 silly addNameRange     '0.5.4',
53 silly addNameRange     '0.5.5',
53 silly addNameRange     '0.5.6',
53 silly addNameRange     '0.5.7',
53 silly addNameRange     '0.5.8',
53 silly addNameRange     '0.5.9',
53 silly addNameRange     '0.5.10',
53 silly addNameRange     '0.5.11',
53 silly addNameRange     '0.6.0',
53 silly addNameRange     '0.6.1',
53 silly addNameRange     '0.6.2',
53 silly addNameRange     '0.6.3',
53 silly addNameRange     '0.6.4',
53 silly addNameRange     '0.6.5',
53 silly addNameRange     '0.6.6',
53 silly addNameRange     '0.6.7',
53 silly addNameRange     '0.7.0',
53 silly addNameRange     '0.7.1',
53 silly addNameRange     '0.7.2',
53 silly addNameRange     '0.7.3',
53 silly addNameRange     '0.8.0',
53 silly addNameRange     '0.8.1',
53 silly addNameRange     '0.8.2' ] ]
54 verbose addNamed [ 'redis', '0.8.2' ]
55 verbose addNamed [ '0.8.2', '0.8.2' ]
56 silly lockFile 0e7a726c-redis-0-8-2 redis@0.8.2
57 verbose lock redis@0.8.2 C:\Users\gaultier\AppData\Roaming\npm-cache\0e7a726c-redis-0-8-2.lock
58 verbose read json C:\Users\gaultier\AppData\Roaming\npm-cache\redis\0.8.2\package\package.json
59 silly addNameRange number 2 { name: 'hiredis', range: '', hasData: true }
60 silly addNameRange versions [ 'hiredis',
60 silly addNameRange   [ '0.1.0',
60 silly addNameRange     '0.1.1',
60 silly addNameRange     '0.1.2',
60 silly addNameRange     '0.1.3',
60 silly addNameRange     '0.1.4',
60 silly addNameRange     '0.1.5',
60 silly addNameRange     '0.1.6',
60 silly addNameRange     '0.1.8',
60 silly addNameRange     '0.1.9',
60 silly addNameRange     '0.1.10',
60 silly addNameRange     '0.1.12',
60 silly addNameRange     '0.1.13',
60 silly addNameRange     '0.1.14' ] ]
61 verbose addNamed [ 'hiredis', '0.1.14' ]
62 verbose addNamed [ '0.1.14', '0.1.14' ]
63 silly lockFile e9c5aa12-hiredis-0-1-14 hiredis@0.1.14
64 verbose lock hiredis@0.1.14 C:\Users\gaultier\AppData\Roaming\npm-cache\e9c5aa12-hiredis-0-1-14.lock
65 verbose read json C:\Users\gaultier\AppData\Roaming\npm-cache\hiredis\0.1.14\package\package.json
66 silly lockFile 0e7a726c-redis-0-8-2 redis@0.8.2
67 silly lockFile 0e7a726c-redis-0-8-2 redis@0.8.2
68 silly lockFile fb3bbc27-redis redis@
69 silly lockFile fb3bbc27-redis redis@
70 warn package.json hiredis@0.1.14 No README.md file found!
71 silly lockFile e9c5aa12-hiredis-0-1-14 hiredis@0.1.14
72 silly lockFile e9c5aa12-hiredis-0-1-14 hiredis@0.1.14
73 silly lockFile dc014615-hiredis hiredis@
74 silly lockFile dc014615-hiredis hiredis@
75 silly resolved [ { name: 'redis',
75 silly resolved     version: '0.8.2',
75 silly resolved     description: 'Redis client library',
75 silly resolved     keywords: [ 'redis', 'database' ],
75 silly resolved     author: { name: 'Matt Ranney', email: 'mjr@ranney.com' },
75 silly resolved     main: './index.js',
75 silly resolved     scripts: { test: 'node ./test.js' },
75 silly resolved     devDependencies: { metrics: '>=0.1.5' },
75 silly resolved     repository: { type: 'git', url: 'git://github.com/mranney/node_redis.git' },
75 silly resolved     readme: 'redis - a node.js redis client\n===========================\n\nThis is a complete Redis client for node.js.  It supports all Redis commands, including many recently added commands like EVAL from\nexperimental Redis server branches.\n\n\nInstall with:\n\n    npm install redis\n\nPieter Noordhuis has provided a binding to the official `hiredis` C library, which is non-blocking and fast.  To use `hiredis`, do:\n\n    npm install hiredis redis\n\nIf `hiredis` is installed, `node_redis` will use it by default.  Otherwise, a pure JavaScript parser will be used.\n\nIf you use `hiredis`, be sure to rebuild it whenever you upgrade your version of node.  There are mysterious failures that can\nhappen between node and native code modules after a node upgrade.\n\n\n## Usage\n\nSimple example, included as `examples/simple.js`:\n\n```js\n    var redis = require("redis"),\n        client = redis.createClient();\n\n    // if you\'d like to select database 3, instead of 0 (default), call\n    // client.select(3, function() { /* ... */ });\n\n    client.on("error", function (err) {\n        console.log("Error " + err);\n    });\n\n    client.set("string key", "string val", redis.print);\n    client.hset("hash key", "hashtest 1", "some value", redis.print);\n    client.hset(["hash key", "hashtest 2", "some other value"], redis.print);\n    client.hkeys("hash key", function (err, replies) {\n        console.log(replies.length + " replies:");\n        replies.forEach(function (reply, i) {\n            console.log("    " + i + ": " + reply);\n        });\n        client.quit();\n    });\n```\n\nThis will display:\n\n    mjr:~/work/node_redis (master)$ node example.js\n    Reply: OK\n    Reply: 0\n    Reply: 0\n    2 replies:\n        0: hashtest 1\n        1: hashtest 2\n    mjr:~/work/node_redis (master)$\n\n\n## Performance\n\nHere are typical results of `multi_bench.js` which is similar to `redis-benchmark` from the Redis distribution.\nIt uses 50 concurrent connections with no pipelining.\n\nJavaScript parser:\n\n    PING: 20000 ops 42283.30 ops/sec 0/5/1.182\n    SET: 20000 ops 32948.93 ops/sec 1/7/1.515\n    GET: 20000 ops 28694.40 ops/sec 0/9/1.740\n    INCR: 20000 ops 39370.08 ops/sec 0/8/1.269\n    LPUSH: 20000 ops 36429.87 ops/sec 0/8/1.370\n    LRANGE (10 elements): 20000 ops 9891.20 ops/sec 1/9/5.048\n    LRANGE (100 elements): 20000 ops 1384.56 ops/sec 10/91/36.072\n\nhiredis parser:\n\n    PING: 20000 ops 46189.38 ops/sec 1/4/1.082\n    SET: 20000 ops 41237.11 ops/sec 0/6/1.210\n    GET: 20000 ops 39682.54 ops/sec 1/7/1.257\n    INCR: 20000 ops 40080.16 ops/sec 0/8/1.242\n    LPUSH: 20000 ops 41152.26 ops/sec 0/3/1.212\n    LRANGE (10 elements): 20000 ops 36563.07 ops/sec 1/8/1.363\n    LRANGE (100 elements): 20000 ops 21834.06 ops/sec 0/9/2.287\n\nThe performance of `node_redis` improves dramatically with pipelining, which happens automatically in most normal programs.\n\n\n### Sending Commands\n\nEach Redis command is exposed as a function on the `client` object.\nAll functions take either an `args` Array plus optional `callback` Function or\na variable number of individual arguments followed by an optional callback.\nHere is an example of passing an array of arguments and a callback:\n\n    client.mset(["test keys 1", "test val 1", "test keys 2", "test val 2"], function (err, res) {});\n\nHere is that same call in the second style:\n\n    client.mset("test keys 1", "test val 1", "test keys 2", "test val 2", function (err, res) {});\n\nNote that in either form the `callback` is optional:\n\n    client.set("some key", "some val");\n    client.set(["some other key", "some val"]);\n\nIf the key is missing, reply will be null (probably):\n\n    client.get("missingkey", function(err, reply) {\n        // reply is null when the key is missing\n        console.log(reply);\n    });\n\nFor a list of Redis commands, see [Redis Command Reference](http://redis.io/commands)\n\nThe commands can be specified in uppercase or lowercase for convenience.  `client.get()` is the same as `client.GET()`.\n\nMinimal parsing is done on the replies.  Commands that return a single line reply return JavaScript Strings,\ninteger replies return JavaScript Numbers, "bulk" replies return node Buffers, and "multi bulk" replies return a\nJavaScript Array of node Buffers.  `HGETALL` returns an Object with Buffers keyed by the hash keys.\n\n# API\n\n## Connection Events\n\n`client` will emit some events about the state of the connection to the Redis server.\n\n### "ready"\n\n`client` will emit `ready` a connection is established to the Redis server and the server reports\nthat it is ready to receive commands.  Commands issued before the `ready` event are queued,\nthen replayed just before this event is emitted.\n\n### "connect"\n\n`client` will emit `connect` at the same time as it emits `ready` unless `client.options.no_ready_check`\nis set.  If this options is set, `connect` will be emitted when the stream is connected, and then\nyou are free to try to send commands.\n\n### "error"\n\n`client` will emit `error` when encountering an error connecting to the Redis server.\n\nNote that "error" is a special event type in node.  If there are no listeners for an\n"error" event, node will exit.  This is usually what you want, but it can lead to some\ncryptic error messages like this:\n\n    mjr:~/work/node_redis (master)$ node example.js\n\n    node.js:50\n        throw e;\n        ^\n    Error: ECONNREFUSED, Connection refused\n        at IOWatcher.callback (net:870:22)\n        at node.js:607:9\n\nNot very useful in diagnosing the problem, but if your program isn\'t ready to handle this,\nit is probably the right thing to just exit.\n\n`client` will also emit `error` if an exception is thrown inside of `node_redis` for whatever reason.\nIt would be nice to distinguish these two cases.\n\n### "end"\n\n`client` will emit `end` when an established Redis server connection has closed.\n\n### "drain"\n\n`client` will emit `drain` when the TCP connection to the Redis server has been buffering, but is now\nwritable.  This event can be used to stream commands in to Redis and adapt to backpressure.  Right now,\nyou need to check `client.command_queue.length` to decide when to reduce your send rate.  Then you can\nresume sending when you get `drain`.\n\n### "idle"\n\n`client` will emit `idle` when there are no outstanding commands that are awaiting a response.\n\n## redis.createClient(port, host, options)\n\nCreate a new client connection.  `port` defaults to `6379` and `host` defaults\nto `127.0.0.1`.  If you have `redis-server` running on the same computer as node, then the defaults for\nport and host are probably fine.  `options` in an object with the following possible properties:\n\n* `parser`: which Redis protocol reply parser to use.  Defaults to `hiredis` if that module is installed.\nThis may also be set to `javascript`.\n* `return_buffers`: defaults to `false`.  If set to `true`, then all replies will be sent to callbacks as node Buffer\nobjects instead of JavaScript Strings.\n* `detect_buffers`: default to `false`. If set to `true`, then replies will be sent to callbacks as node Buffer objects\nif any of the input arguments to the original command were Buffer objects.\nThis option lets you switch between Buffers and Strings on a per-command basis, whereas `return_buffers` applies to\nevery command on a client.\n* `socket_nodelay`: defaults to `true`. Whether to call setNoDelay() on the TCP stream, which disables the\nNagle algorithm on the underlying socket.  Setting this option to `false` can result in additional throughput at the\ncost of more latency.  Most applications will want this set to `true`.\n* `no_ready_check`: defaults to `false`. When a connection is established to the Redis server, the server might still\nbe loading the database from disk.  While loading, the server not respond to any commands.  To work around this,\n`node_redis` has a "ready check" which sends the `INFO` command to the server.  The response from the `INFO` command\nindicates whether the server is ready for more commands.  When ready, `node_redis` emits a `ready` event.\nSetting `no_ready_check` to `true` will inhibit this check.\n* `enable_offline_queue`: defaults to `true`. By default, if there is no active\nconnection to the redis server, commands are added to a queue and are executed\nonce the connection has been established. Setting `enable_offline_queue` to\n`false` will disable this feature and the callback will be execute immediately\nwith an error, or an error will be thrown if no callback is specified.\n\n```js\n    var redis = require("redis"),\n        client = redis.createClient(null, null, {detect_buffers: true});\n\n    client.set("foo_rand000000000000", "OK");\n\n    // This will return a JavaScript String\n    client.get("foo_rand000000000000", function (err, reply) {\n        console.log(reply.toString()); // Will print `OK`\n    });\n\n    // This will return a Buffer since original key is specified as a Buffer\n    client.get(new Buffer("foo_rand000000000000"), function (err, reply) {\n        console.log(reply.toString()); // Will print `<Buffer 4f 4b>`\n    });\n    client.end();\n```\n\n`createClient()` returns a `RedisClient` object that is named `client` in all of the examples here.\n\n## client.auth(password, callback)\n\nWhen connecting to Redis servers that require authentication, the `AUTH` command must be sent as the\nfirst command after connecting.  This can be tricky to coordinate with reconnections, the ready check,\netc.  To make this easier, `client.auth()` stashes `password` and will send it after each connection,\nincluding reconnections.  `callback` is invoked only once, after the response to the very first\n`AUTH` command sent.\nNOTE: Your call to `client.auth()` should not be inside the ready handler. If\nyou are doing this wrong, `client` will emit an error that looks\nsomething like this `Error: Ready check failed: ERR operation not permitted`.\n\n## client.end()\n\nForcibly close the connection to the Redis server.  Note that this does not wait until all replies have been parsed.\nIf you want to exit cleanly, call `client.quit()` to send the `QUIT` command after you have handled all replies.\n\nThis example closes the connection to the Redis server before the replies have been read.  You probably don\'t\nwant to do this:\n\n```js\n    var redis = require("redis"),\n        client = redis.createClient();\n\n    client.set("foo_rand000000000000", "some fantastic value");\n    client.get("foo_rand000000000000", function (err, reply) {\n        console.log(reply.toString());\n    });\n    client.end();\n```\n\n`client.end()` is useful for timeout cases where something is stuck or taking too long and you want\nto start over.\n\n## Friendlier hash commands\n\nMost Redis commands take a single String or an Array of Strings as arguments, and replies are sent back as a single String or an Array of Strings.\nWhen dealing with hash values, there are a couple of useful exceptions to this.\n\n### client.hgetall(hash)\n\nThe reply from an HGETALL command will be converted into a JavaScript Object by `node_redis`.  That way you can interact\nwith the responses using JavaScript syntax.\n\nExample:\n\n    client.hmset("hosts", "mjr", "1", "another", "23", "home", "1234");\n    client.hgetall("hosts", function (err, obj) {\n        console.dir(obj);\n    });\n\nOutput:\n\n    { mjr: \'1\', another: \'23\', home: \'1234\' }\n\n### client.hmset(hash, obj, [callback])\n\nMultiple values in a hash can be set by supplying an object:\n\n    client.HMSET(key2, {\n        "0123456789": "abcdefghij", // NOTE: the key and value must both be strings\n        "some manner of key": "a type of value"\n    });\n\nThe properties and values of this Object will be set as keys and values in the Redis hash.\n\n### client.hmset(hash, key1, val1, ... keyn, valn, [callback])\n\nMultiple values may also be set by supplying a list:\n\n    client.HMSET(key1, "0123456789", "abcdefghij", "some manner of key", "a type of value");\n\n\n## Publish / Subscribe\n\nHere is a simple example of the API for publish / subscribe.  This program opens two\nclient connections, subscribes to a channel on one of them, and publishes to that\nchannel on the other:\n\n```js\n    var redis = require("redis"),\n        client1 = redis.createClient(), client2 = redis.createClient(),\n        msg_count = 0;\n\n    client1.on("subscribe", function (channel, count) {\n        client2.publish("a nice channel", "I am sending a message.");\n        client2.publish("a nice channel", "I am sending a second message.");\n        client2.publish("a nice channel", "I am sending my last message.");\n    });\n\n    client1.on("message", function (channel, message) {\n        console.log("client1 channel " + channel + ": " + message);\n        msg_count += 1;\n        if (msg_count === 3) {\n            client1.unsubscribe();\n            client1.end();\n            client2.end();\n        }\n    });\n\n    client1.incr("did a thing");\n    client1.subscribe("a nice channel");\n```\n\nWhen a client issues a `SUBSCRIBE` or `PSUBSCRIBE`, that connection is put into "pub/sub" mode.\nAt that point, only commands that modify the subscription set are valid.  When the subscription\nset is empty, the connection is put back into regular mode.\n\nIf you need to send regular commands to Redis while in pub/sub mode, just open another connection.\n\n## Pub / Sub Events\n\nIf a client has subscriptions active, it may emit these events:\n\n### "message" (channel, message)\n\nClient will emit `message` for every message received that matches an active subscription.\nListeners are passed the channel name as `channel` and the message Buffer as `message`.\n\n### "pmessage" (pattern, channel, message)\n\nClient will emit `pmessage` for every message received that matches an active subscription pattern.\nListeners are passed the original pattern used with `PSUBSCRIBE` as `pattern`, the sending channel\nname as `channel`, and the message Buffer as `message`.\n\n### "subscribe" (channel, count)\n\nClient will emit `subscribe` in response to a `SUBSCRIBE` command.  Listeners are passed the\nchannel name as `channel` and the new count of subscriptions for this client as `count`.\n\n### "psubscribe" (pattern, count)\n\nClient will emit `psubscribe` in response to a `PSUBSCRIBE` command.  Listeners are passed the\noriginal pattern as `pattern`, and the new count of subscriptions for this client as `count`.\n\n### "unsubscribe" (channel, count)\n\nClient will emit `unsubscribe` in response to a `UNSUBSCRIBE` command.  Listeners are passed the\nchannel name as `channel` and the new count of subscriptions for this client as `count`.  When\n`count` is 0, this client has left pub/sub mode and no more pub/sub events will be emitted.\n\n### "punsubscribe" (pattern, count)\n\nClient will emit `punsubscribe` in response to a `PUNSUBSCRIBE` command.  Listeners are passed the\nchannel name as `channel` and the new count of subscriptions for this client as `count`.  When\n`count` is 0, this client has left pub/sub mode and no more pub/sub events will be emitted.\n\n## client.multi([commands])\n\n`MULTI` commands are queued up until an `EXEC` is issued, and then all commands are run atomically by\nRedis.  The interface in `node_redis` is to return an individual `Multi` object by calling `client.multi()`.\n\n```js\n    var redis  = require("./index"),\n        client = redis.createClient(), set_size = 20;\n\n    client.sadd("bigset", "a member");\n    client.sadd("bigset", "another member");\n\n    while (set_size > 0) {\n        client.sadd("bigset", "member " + set_size);\n        set_size -= 1;\n    }\n\n    // multi chain with an individual callback\n    client.multi()\n        .scard("bigset")\n        .smembers("bigset")\n        .keys("*", function (err, replies) {\n            // NOTE: code in this callback is NOT atomic\n            // this only happens after the the .exec call finishes.\n            client.mget(replies, redis.print);\n        })\n        .dbsize()\n        .exec(function (err, replies) {\n            console.log("MULTI got " + replies.length + " replies");\n            replies.forEach(function (reply, index) {\n                console.log("Reply " + index + ": " + reply.toString());\n            });\n        });\n```\n\n`client.multi()` is a constructor that returns a `Multi` object.  `Multi` objects share all of the\nsame command methods as `client` objects do.  Commands are queued up inside the `Multi` object\nuntil `Multi.exec()` is invoked.\n\nYou can either chain together `MULTI` commands as in the above example, or you can queue individual\ncommands while still sending regular client command as in this example:\n\n```js\n    var redis  = require("redis"),\n        client = redis.createClient(), multi;\n\n    // start a separate multi command queue\n    multi = client.multi();\n    multi.incr("incr thing", redis.print);\n    multi.incr("incr other thing", redis.print);\n\n    // runs immediately\n    client.mset("incr thing", 100, "incr other thing", 1, redis.print);\n\n    // drains multi queue and runs atomically\n    multi.exec(function (err, replies) {\n        console.log(replies); // 101, 2\n    });\n\n    // you can re-run the same transaction if you like\n    multi.exec(function (err, replies) {\n        console.log(replies); // 102, 3\n        client.quit();\n    });\n```\n\nIn addition to adding commands to the `MULTI` queue individually, you can also pass an array\nof commands and arguments to the constructor:\n\n```js\n    var redis  = require("redis"),\n        client = redis.createClient(), multi;\n\n    client.multi([\n        ["mget", "multifoo", "multibar", redis.print],\n        ["incr", "multifoo"],\n        ["incr", "multibar"]\n    ]).exec(function (err, replies) {\n        console.log(replies);\n    });\n```\n\n\n## Monitor mode\n\nRedis supports the `MONITOR` command, which lets you see all commands received by the Redis server\nacross all client connections, including from other client libraries and other computers.\n\nAfter you send the `MONITOR` command, no other commands are valid on that connection.  `node_redis`\nwill emit a `monitor` event for every new monitor message that comes across.  The callback for the\n`monitor` event takes a timestamp from the Redis server and an array of command arguments.\n\nHere is a simple example:\n\n```js\n    var client  = require("redis").createClient(),\n        util = require("util");\n\n    client.monitor(function (err, res) {\n        console.log("Entering monitoring mode.");\n    });\n\n    client.on("monitor", function (time, args) {\n        console.log(time + ": " + util.inspect(args));\n    });\n```\n\n# Extras\n\nSome other things you might like to know about.\n\n## client.server_info\n\nAfter the ready probe completes, the results from the INFO command are saved in the `client.server_info`\nobject.\n\nThe `versions` key contains an array of the elements of the version string for easy comparison.\n\n    > client.server_info.redis_version\n    \'2.3.0\'\n    > client.server_info.versions\n    [ 2, 3, 0 ]\n\n## redis.print()\n\nA handy callback function for displaying return values when testing.  Example:\n\n```js\n    var redis = require("redis"),\n        client = redis.createClient();\n\n    client.on("connect", function () {\n        client.set("foo_rand000000000000", "some fantastic value", redis.print);\n        client.get("foo_rand000000000000", redis.print);\n    });\n```\n\nThis will print:\n\n    Reply: OK\n    Reply: some fantastic value\n\nNote that this program will not exit cleanly because the client is still connected.\n\n## redis.debug_mode\n\nBoolean to enable debug mode and protocol tracing.\n\n```js\n    var redis = require("redis"),\n        client = redis.createClient();\n\n    redis.debug_mode = true;\n\n    client.on("connect", function () {\n        client.set("foo_rand000000000000", "some fantastic value");\n    });\n```\n\nThis will display:\n\n    mjr:~/work/node_redis (master)$ node ~/example.js\n    send command: *3\n    $3\n    SET\n    $20\n    foo_rand000000000000\n    $20\n    some fantastic value\n\n    on_data: +OK\n\n`send command` is data sent into Redis and `on_data` is data received from Redis.\n\n## client.send_command(command_name, args, callback)\n\nUsed internally to send commands to Redis.  For convenience, nearly all commands that are published on the Redis\nWiki have been added to the `client` object.  However, if I missed any, or if new commands are introduced before\nthis library is updated, you can use `send_command()` to send arbitrary commands to Redis.\n\nAll commands are sent as multi-bulk commands.  `args` can either be an Array of arguments, or omitted.\n\n## client.connected\n\nBoolean tracking the state of the connection to the Redis server.\n\n## client.command_queue.length\n\nThe number of commands that have been sent to the Redis server but not yet replied to.  You can use this to\nenforce some kind of maximum queue depth for commands while connected.\n\nDon\'t mess with `client.command_queue` though unless you really know what you are doing.\n\n## client.offline_queue.length\n\nThe number of commands that have been queued up for a future connection.  You can use this to enforce\nsome kind of maximum queue depth for pre-connection commands.\n\n## client.retry_delay\n\nCurrent delay in milliseconds before a connection retry will be attempted.  This starts at `250`.\n\n## client.retry_backoff\n\nMultiplier for future retry timeouts.  This should be larger than 1 to add more time between retries.\nDefaults to 1.7.  The default initial connection retry is 250, so the second retry will be 425, followed by 723.5, etc.\n\n### Commands with Optional and Keyword arguments\n\nThis applies to anything that uses an optional `[WITHSCORES]` or `[LIMIT offset count]` in the [redis.io/commands](http://redis.io/commands) documentation.\n\nExample:\n```js\nvar args = [ \'myzset\', 1, \'one\', 2, \'two\', 3, \'three\', 99, \'ninety-nine\' ];\nclient.zadd(args, function (err, response) {\n    if (err) throw err;\n    console.log(\'added \'+response+\' items.\');\n\n    // -Infinity and +Infinity also work\n    var args1 = [ \'myzset\', \'+inf\', \'-inf\' ];\n    client.zrevrangebyscore(args1, function (err, response) {\n        if (err) throw err;\n        console.log(\'example1\', response);\n        // write your code here\n    });\n\n    var max = 3, min = 1, offset = 1, count = 2;\n    var args2 = [ \'myzset\', max, min, \'WITHSCORES\', \'LIMIT\', offset, count ];\n    client.zrevrangebyscore(args2, function (err, response) {\n        if (err) throw err;\n        console.log(\'example2\', response);\n        // write your code here\n    });\n});\n```\n\n## TODO\n\nBetter tests for auth, disconnect/reconnect, and all combinations thereof.\n\nStream large set/get values into and out of Redis.  Otherwise the entire value must be in node\'s memory.\n\nPerformance can be better for very large values.\n\nI think there are more performance improvements left in there for smaller values, especially for large lists of small values.\n\n## How to Contribute\n- open a pull request and then wait for feedback (if\n  [DTrejo](http://github.com/dtrejo) does not get back to you within 2 days,\n  comment again with indignation!)\n\n## Contributors\nSome people have have added features and fixed bugs in `node_redis` other than me.\n\nOrdered by date of first contribution.\n[Auto-generated](http://github.com/dtrejo/node-authors) on Wed Jul 25 2012 19:14:59 GMT-0700 (PDT).\n\n- [Matt Ranney aka `mranney`](https://github.com/mranney)\n- [Tim-Smart aka `tim-smart`](https://github.com/tim-smart)\n- [Tj Holowaychuk aka `visionmedia`](https://github.com/visionmedia)\n- [rick aka `technoweenie`](https://github.com/technoweenie)\n- [Orion Henry aka `orionz`](https://github.com/orionz)\n- [Aivo Paas aka `aivopaas`](https://github.com/aivopaas)\n- [Hank Sims aka `hanksims`](https://github.com/hanksims)\n- [Paul Carey aka `paulcarey`](https://github.com/paulcarey)\n- [Pieter Noordhuis aka `pietern`](https://github.com/pietern)\n- [nithesh aka `nithesh`](https://github.com/nithesh)\n- [Andy Ray aka `andy2ray`](https://github.com/andy2ray)\n- [unknown aka `unknowdna`](https://github.com/unknowdna)\n- [Dave Hoover aka `redsquirrel`](https://github.com/redsquirrel)\n- [Vladimir Dronnikov aka `dvv`](https://github.com/dvv)\n- [Umair Siddique aka `umairsiddique`](https://github.com/umairsiddique)\n- [Louis-Philippe Perron aka `lp`](https://github.com/lp)\n- [Mark Dawson aka `markdaws`](https://github.com/markdaws)\n- [Ian Babrou aka `bobrik`](https://github.com/bobrik)\n- [Felix Geisendörfer aka `felixge`](https://github.com/felixge)\n- [Jean-Hugues Pinson aka `undefined`](https://github.com/undefined)\n- [Maksim Lin aka `maks`](https://github.com/maks)\n- [Owen Smith aka `orls`](https://github.com/orls)\n- [Zachary Scott aka `zzak`](https://github.com/zzak)\n- [TEHEK Firefox aka `TEHEK`](https://github.com/TEHEK)\n- [Isaac Z. Schlueter aka `isaacs`](https://github.com/isaacs)\n- [David Trejo aka `DTrejo`](https://github.com/DTrejo)\n- [Brian Noguchi aka `bnoguchi`](https://github.com/bnoguchi)\n- [Philip Tellis aka `bluesmoon`](https://github.com/bluesmoon)\n- [Marcus Westin aka `marcuswestin2`](https://github.com/marcuswestin2)\n- [Jed Schmidt aka `jed`](https://github.com/jed)\n- [Dave Peticolas aka `jdavisp3`](https://github.com/jdavisp3)\n- [Trae Robrock aka `trobrock`](https://github.com/trobrock)\n- [Shankar Karuppiah aka `shankar0306`](https://github.com/shankar0306)\n- [Ignacio Burgueño aka `ignacio`](https://github.com/ignacio)\n\nThanks.\n\n## LICENSE - "MIT License"\n\nCopyright (c) 2010 Matthew Ranney, http://ranney.com/\n\nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the "Software"), to deal in the Software without\nrestriction, including without limitation the rights to use,\ncopy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n\n![spacer](http://ranney.com/1px.gif)\n',
75 silly resolved     readmeFilename: 'README.md',
75 silly resolved     _id: 'redis@0.8.2',
75 silly resolved     _from: 'redis@' },
75 silly resolved   { name: 'hiredis',
75 silly resolved     description: 'Wrapper for reply processing code in hiredis',
75 silly resolved     version: '0.1.14',
75 silly resolved     homepage: 'http://github.com/pietern/hiredis-node',
75 silly resolved     author: { name: 'Pieter Noordhuis', email: 'pcnoordhuis@gmail.com' },
75 silly resolved     main: 'hiredis',
75 silly resolved     directories: { lib: '.' },
75 silly resolved     scripts: { preinstall: 'make || gmake', test: 'node test/reader.js' },
75 silly resolved     engines: { node: '*' },
75 silly resolved     readme: 'ERROR: No README.md file found!',
75 silly resolved     readmeFilename: 'README',
75 silly resolved     _id: 'hiredis@0.1.14',
75 silly resolved     _from: 'hiredis@' } ]
76 info install redis@0.8.2 into C:\wamp\www\git\Skillico\enchere-node-server
77 info install hiredis@0.1.14 into C:\wamp\www\git\Skillico\enchere-node-server
78 info installOne redis@0.8.2
79 info installOne hiredis@0.1.14
80 verbose from cache C:\Users\gaultier\AppData\Roaming\npm-cache\hiredis\0.1.14\package\package.json
81 info C:\wamp\www\git\Skillico\enchere-node-server\node_modules\hiredis unbuild
82 verbose read json C:\wamp\www\git\Skillico\enchere-node-server\node_modules\hiredis\package.json
83 verbose from cache C:\Users\gaultier\AppData\Roaming\npm-cache\redis\0.8.2\package\package.json
84 info C:\wamp\www\git\Skillico\enchere-node-server\node_modules\redis unbuild
85 verbose from cache C:\wamp\www\git\Skillico\enchere-node-server\node_modules\redis\package.json
86 info preuninstall redis@0.8.2
87 info uninstall redis@0.8.2
88 verbose tar unpack C:\Users\gaultier\AppData\Roaming\npm-cache\hiredis\0.1.14\package.tgz
89 silly lockFile 5ff1d9c8-node-server-node-modules-hiredis C:\wamp\www\git\Skillico\enchere-node-server\node_modules\hiredis
90 verbose lock C:\wamp\www\git\Skillico\enchere-node-server\node_modules\hiredis C:\Users\gaultier\AppData\Roaming\npm-cache\5ff1d9c8-node-server-node-modules-hiredis.lock
91 silly lockFile 3ee99bd2-cache-hiredis-0-1-14-package-tgz C:\Users\gaultier\AppData\Roaming\npm-cache\hiredis\0.1.14\package.tgz
92 verbose lock C:\Users\gaultier\AppData\Roaming\npm-cache\hiredis\0.1.14\package.tgz C:\Users\gaultier\AppData\Roaming\npm-cache\3ee99bd2-cache-hiredis-0-1-14-package-tgz.lock
93 verbose true,C:\wamp\www\git\Skillico\enchere-node-server\node_modules,C:\wamp\www\git\Skillico\enchere-node-server\node_modules unbuild redis@0.8.2
94 info postuninstall redis@0.8.2
95 silly gunzTarPerm modes [ '755', '644' ]
96 silly gunzTarPerm extractEntry package.json
97 silly gunzTarPerm modified mode [ 'package.json', 438, 420 ]
98 silly gunzTarPerm extractEntry README
99 silly gunzTarPerm modified mode [ 'README', 438, 420 ]
100 silly gunzTarPerm extractEntry bench.js
101 silly gunzTarPerm modified mode [ 'bench.js', 438, 420 ]
102 silly gunzTarPerm extractEntry hiredis.js
103 silly gunzTarPerm modified mode [ 'hiredis.js', 438, 420 ]
104 silly gunzTarPerm extractEntry parser_bench.js
105 silly gunzTarPerm modified mode [ 'parser_bench.js', 438, 420 ]
106 silly gunzTarPerm extractEntry Makefile
107 silly gunzTarPerm modified mode [ 'Makefile', 438, 420 ]
108 silly gunzTarPerm extractEntry deps/hiredis/README.md
109 silly gunzTarPerm modified mode [ 'deps/hiredis/README.md', 438, 420 ]
110 silly gunzTarPerm extractEntry deps/hiredis/example.c
111 silly gunzTarPerm modified mode [ 'deps/hiredis/example.c', 438, 420 ]
112 silly gunzTarPerm extractEntry deps/hiredis/async.h
113 silly gunzTarPerm modified mode [ 'deps/hiredis/async.h', 438, 420 ]
114 silly gunzTarPerm extractEntry deps/hiredis/CHANGELOG.md
115 silly gunzTarPerm modified mode [ 'deps/hiredis/CHANGELOG.md', 438, 420 ]
116 silly gunzTarPerm extractEntry deps/hiredis/COPYING
117 silly gunzTarPerm modified mode [ 'deps/hiredis/COPYING', 438, 420 ]
118 silly gunzTarPerm extractEntry deps/hiredis/dict.c
119 silly gunzTarPerm modified mode [ 'deps/hiredis/dict.c', 438, 420 ]
120 silly gunzTarPerm extractEntry deps/hiredis/dict.h
121 silly gunzTarPerm modified mode [ 'deps/hiredis/dict.h', 438, 420 ]
122 silly gunzTarPerm extractEntry deps/hiredis/example-ae.c
123 silly gunzTarPerm modified mode [ 'deps/hiredis/example-ae.c', 438, 420 ]
124 silly gunzTarPerm extractEntry deps/hiredis/example-libev.c
125 silly gunzTarPerm modified mode [ 'deps/hiredis/example-libev.c', 438, 420 ]
126 silly gunzTarPerm extractEntry deps/hiredis/example-libevent.c
127 silly gunzTarPerm modified mode [ 'deps/hiredis/example-libevent.c', 438, 420 ]
128 silly gunzTarPerm extractEntry deps/hiredis/async.c
129 silly gunzTarPerm modified mode [ 'deps/hiredis/async.c', 438, 420 ]
130 silly gunzTarPerm extractEntry deps/hiredis/fmacros.h
131 silly gunzTarPerm modified mode [ 'deps/hiredis/fmacros.h', 438, 420 ]
132 silly gunzTarPerm extractEntry deps/hiredis/hiredis.c
133 silly gunzTarPerm modified mode [ 'deps/hiredis/hiredis.c', 438, 420 ]
134 silly gunzTarPerm extractEntry deps/hiredis/hiredis.h
135 silly gunzTarPerm modified mode [ 'deps/hiredis/hiredis.h', 438, 420 ]
136 silly gunzTarPerm extractEntry deps/hiredis/Makefile
137 silly gunzTarPerm modified mode [ 'deps/hiredis/Makefile', 438, 420 ]
138 silly gunzTarPerm extractEntry deps/hiredis/net.c
139 silly gunzTarPerm modified mode [ 'deps/hiredis/net.c', 438, 420 ]
140 silly gunzTarPerm extractEntry deps/hiredis/net.h
141 silly gunzTarPerm modified mode [ 'deps/hiredis/net.h', 438, 420 ]
142 silly gunzTarPerm extractEntry deps/hiredis/adapters/ae.h
143 silly gunzTarPerm modified mode [ 'deps/hiredis/adapters/ae.h', 438, 420 ]
144 verbose tar unpack C:\Users\gaultier\AppData\Roaming\npm-cache\redis\0.8.2\package.tgz
145 silly lockFile 994b6f58-e-node-server-node-modules-redis C:\wamp\www\git\Skillico\enchere-node-server\node_modules\redis
146 verbose lock C:\wamp\www\git\Skillico\enchere-node-server\node_modules\redis C:\Users\gaultier\AppData\Roaming\npm-cache\994b6f58-e-node-server-node-modules-redis.lock
147 silly lockFile c99e0b31-pm-cache-redis-0-8-2-package-tgz C:\Users\gaultier\AppData\Roaming\npm-cache\redis\0.8.2\package.tgz
148 verbose lock C:\Users\gaultier\AppData\Roaming\npm-cache\redis\0.8.2\package.tgz C:\Users\gaultier\AppData\Roaming\npm-cache\c99e0b31-pm-cache-redis-0-8-2-package-tgz.lock
149 silly gunzTarPerm modes [ '755', '644' ]
150 silly gunzTarPerm extractEntry deps/hiredis/adapters/libev.h
151 silly gunzTarPerm modified mode [ 'deps/hiredis/adapters/libev.h', 438, 420 ]
152 silly gunzTarPerm extractEntry deps/hiredis/adapters/libevent.h
153 silly gunzTarPerm modified mode [ 'deps/hiredis/adapters/libevent.h', 438, 420 ]
154 silly gunzTarPerm extractEntry package.json
155 silly gunzTarPerm modified mode [ 'package.json', 438, 420 ]
156 silly gunzTarPerm extractEntry .npmignore
157 silly gunzTarPerm modified mode [ '.npmignore', 438, 420 ]
158 silly gunzTarPerm extractEntry README.md
159 silly gunzTarPerm modified mode [ 'README.md', 438, 420 ]
160 silly gunzTarPerm extractEntry deps/hiredis/sds.c
161 silly gunzTarPerm modified mode [ 'deps/hiredis/sds.c', 438, 420 ]
162 silly gunzTarPerm extractEntry deps/hiredis/sds.h
163 silly gunzTarPerm modified mode [ 'deps/hiredis/sds.h', 438, 420 ]
164 silly gunzTarPerm extractEntry deps/hiredis/test.c
165 silly gunzTarPerm modified mode [ 'deps/hiredis/test.c', 438, 420 ]
166 silly gunzTarPerm extractEntry test.js
167 silly gunzTarPerm modified mode [ 'test.js', 438, 420 ]
168 silly gunzTarPerm extractEntry diff_multi_bench_output.js
169 silly gunzTarPerm modified mode [ 'diff_multi_bench_output.js', 438, 420 ]
170 silly gunzTarPerm extractEntry reader.cc
171 silly gunzTarPerm modified mode [ 'reader.cc', 438, 420 ]
172 silly gunzTarPerm extractEntry reader.h
173 silly gunzTarPerm modified mode [ 'reader.h', 438, 420 ]
174 silly gunzTarPerm extractEntry generate_commands.js
175 silly gunzTarPerm modified mode [ 'generate_commands.js', 438, 420 ]
176 silly gunzTarPerm extractEntry multi_bench.js
177 silly gunzTarPerm modified mode [ 'multi_bench.js', 438, 420 ]
178 silly gunzTarPerm extractEntry test3.js
179 silly gunzTarPerm modified mode [ 'test3.js', 438, 420 ]
180 silly gunzTarPerm extractEntry index.js
181 silly gunzTarPerm modified mode [ 'index.js', 438, 420 ]
182 silly gunzTarPerm extractEntry lib/commands.js
183 silly gunzTarPerm modified mode [ 'lib/commands.js', 438, 420 ]
184 silly gunzTarPerm extractEntry hiredis.cc
185 silly gunzTarPerm modified mode [ 'hiredis.cc', 438, 420 ]
186 silly gunzTarPerm extractEntry test/reader.js
187 silly gunzTarPerm modified mode [ 'test/reader.js', 438, 420 ]
188 silly gunzTarPerm extractEntry lib/queue.js
189 silly gunzTarPerm modified mode [ 'lib/queue.js', 438, 420 ]
190 silly gunzTarPerm extractEntry lib/to_array.js
191 silly gunzTarPerm modified mode [ 'lib/to_array.js', 438, 420 ]
192 silly gunzTarPerm extractEntry lib/util.js
193 silly gunzTarPerm modified mode [ 'lib/util.js', 438, 420 ]
194 silly gunzTarPerm extractEntry lib/parser/hiredis.js
195 silly gunzTarPerm modified mode [ 'lib/parser/hiredis.js', 438, 420 ]
196 silly gunzTarPerm extractEntry lib/parser/javascript.js
197 silly gunzTarPerm modified mode [ 'lib/parser/javascript.js', 438, 420 ]
198 silly gunzTarPerm extractEntry wscript
199 silly gunzTarPerm modified mode [ 'wscript', 438, 420 ]
200 silly gunzTarPerm extractEntry benches/buffer_bench.js
201 silly gunzTarPerm modified mode [ 'benches/buffer_bench.js', 438, 420 ]
202 silly gunzTarPerm extractEntry benches/hiredis_parser.js
203 silly gunzTarPerm modified mode [ 'benches/hiredis_parser.js', 438, 420 ]
204 silly gunzTarPerm extractEntry benches/reconnect_test.js
205 silly gunzTarPerm modified mode [ 'benches/reconnect_test.js', 438, 420 ]
206 silly gunzTarPerm extractEntry benches/re_sub_test.js
207 silly gunzTarPerm modified mode [ 'benches/re_sub_test.js', 438, 420 ]
208 silly gunzTarPerm extractEntry benches/sub_quit_test.js
209 silly gunzTarPerm modified mode [ 'benches/sub_quit_test.js', 438, 420 ]
210 silly gunzTarPerm extractEntry benches/stress/codec.js
211 silly gunzTarPerm modified mode [ 'benches/stress/codec.js', 438, 420 ]
212 silly gunzTarPerm extractEntry benches/stress/pubsub/pub.js
213 silly gunzTarPerm modified mode [ 'benches/stress/pubsub/pub.js', 438, 420 ]
214 silly gunzTarPerm extractEntry benches/stress/pubsub/server.js
215 silly gunzTarPerm modified mode [ 'benches/stress/pubsub/server.js', 438, 420 ]
216 silly gunzTarPerm extractEntry benches/stress/pubsub/run
217 silly gunzTarPerm modified mode [ 'benches/stress/pubsub/run', 438, 420 ]
218 silly gunzTarPerm extractEntry benches/stress/rpushblpop/pub.js
219 silly gunzTarPerm modified mode [ 'benches/stress/rpushblpop/pub.js', 438, 420 ]
220 silly gunzTarPerm extractEntry benches/stress/rpushblpop/server.js
221 silly gunzTarPerm modified mode [ 'benches/stress/rpushblpop/server.js', 438, 420 ]
222 silly gunzTarPerm extractEntry benches/stress/rpushblpop/run
223 silly gunzTarPerm modified mode [ 'benches/stress/rpushblpop/run', 438, 420 ]
224 silly gunzTarPerm extractEntry benches/stress/speed/speed.js
225 silly gunzTarPerm modified mode [ 'benches/stress/speed/speed.js', 438, 420 ]
226 silly gunzTarPerm extractEntry benches/stress/speed/00
227 silly gunzTarPerm modified mode [ 'benches/stress/speed/00', 438, 420 ]
228 silly gunzTarPerm extractEntry benches/stress/speed/plot
229 silly gunzTarPerm modified mode [ 'benches/stress/speed/plot', 438, 420 ]
230 silly gunzTarPerm extractEntry benches/stress/speed/size-rate.png
231 silly gunzTarPerm modified mode [ 'benches/stress/speed/size-rate.png', 438, 420 ]
232 silly gunzTarPerm extractEntry examples/auth.js
233 silly gunzTarPerm modified mode [ 'examples/auth.js', 438, 420 ]
234 silly gunzTarPerm extractEntry examples/mget.js
235 silly gunzTarPerm modified mode [ 'examples/mget.js', 438, 420 ]
236 silly gunzTarPerm extractEntry examples/monitor.js
237 silly gunzTarPerm modified mode [ 'examples/monitor.js', 438, 420 ]
238 silly gunzTarPerm extractEntry examples/multi.js
239 silly gunzTarPerm modified mode [ 'examples/multi.js', 438, 420 ]
240 silly gunzTarPerm extractEntry examples/file.js
241 silly gunzTarPerm modified mode [ 'examples/file.js', 438, 420 ]
242 silly gunzTarPerm extractEntry examples/psubscribe.js
243 silly gunzTarPerm modified mode [ 'examples/psubscribe.js', 438, 420 ]
244 silly gunzTarPerm extractEntry examples/pub_sub.js
245 silly gunzTarPerm modified mode [ 'examples/pub_sub.js', 438, 420 ]
246 silly gunzTarPerm extractEntry examples/simple.js
247 silly gunzTarPerm modified mode [ 'examples/simple.js', 438, 420 ]
248 silly gunzTarPerm extractEntry examples/sort.js
249 silly gunzTarPerm modified mode [ 'examples/sort.js', 438, 420 ]
250 silly gunzTarPerm extractEntry examples/subqueries.js
251 silly gunzTarPerm modified mode [ 'examples/subqueries.js', 438, 420 ]
252 silly gunzTarPerm extractEntry examples/extend.js
253 silly gunzTarPerm modified mode [ 'examples/extend.js', 438, 420 ]
254 silly gunzTarPerm extractEntry examples/subquery.js
255 silly gunzTarPerm modified mode [ 'examples/subquery.js', 438, 420 ]
256 silly gunzTarPerm extractEntry examples/eval.js
257 silly gunzTarPerm modified mode [ 'examples/eval.js', 438, 420 ]
258 silly gunzTarPerm extractEntry examples/unix_socket.js
259 silly gunzTarPerm modified mode [ 'examples/unix_socket.js', 438, 420 ]
260 silly gunzTarPerm extractEntry examples/backpressure_drain.js
261 silly gunzTarPerm modified mode [ 'examples/backpressure_drain.js', 438, 420 ]
262 silly gunzTarPerm extractEntry examples/web_server.js
263 silly gunzTarPerm modified mode [ 'examples/web_server.js', 438, 420 ]
264 silly gunzTarPerm extractEntry examples/multi2.js
265 silly gunzTarPerm modified mode [ 'examples/multi2.js', 438, 420 ]
266 silly gunzTarPerm extractEntry changelog.md
267 silly gunzTarPerm modified mode [ 'changelog.md', 438, 420 ]
268 verbose read json C:\wamp\www\git\Skillico\enchere-node-server\node_modules\hiredis\package.json
269 silly lockFile 5ff1d9c8-node-server-node-modules-hiredis C:\wamp\www\git\Skillico\enchere-node-server\node_modules\hiredis
270 silly lockFile 5ff1d9c8-node-server-node-modules-hiredis C:\wamp\www\git\Skillico\enchere-node-server\node_modules\hiredis
271 silly lockFile 3ee99bd2-cache-hiredis-0-1-14-package-tgz C:\Users\gaultier\AppData\Roaming\npm-cache\hiredis\0.1.14\package.tgz
272 silly lockFile 3ee99bd2-cache-hiredis-0-1-14-package-tgz C:\Users\gaultier\AppData\Roaming\npm-cache\hiredis\0.1.14\package.tgz
273 info preinstall hiredis@0.1.14
274 verbose unsafe-perm in lifecycle true
275 silly exec cmd "/c" "make || gmake"
276 silly cmd,/c,make || gmake,C:\wamp\www\git\Skillico\enchere-node-server\node_modules\hiredis spawning
277 info hiredis@0.1.14 Failed to exec preinstall script
278 info C:\wamp\www\git\Skillico\enchere-node-server\node_modules\hiredis unbuild
279 verbose from cache C:\wamp\www\git\Skillico\enchere-node-server\node_modules\hiredis\package.json
280 info preuninstall hiredis@0.1.14
281 info uninstall hiredis@0.1.14
282 verbose true,C:\wamp\www\git\Skillico\enchere-node-server\node_modules,C:\wamp\www\git\Skillico\enchere-node-server\node_modules unbuild hiredis@0.1.14
283 info postuninstall hiredis@0.1.14
284 verbose read json C:\wamp\www\git\Skillico\enchere-node-server\node_modules\redis\package.json
285 silly lockFile 994b6f58-e-node-server-node-modules-redis C:\wamp\www\git\Skillico\enchere-node-server\node_modules\redis
286 silly lockFile 994b6f58-e-node-server-node-modules-redis C:\wamp\www\git\Skillico\enchere-node-server\node_modules\redis
287 silly lockFile c99e0b31-pm-cache-redis-0-8-2-package-tgz C:\Users\gaultier\AppData\Roaming\npm-cache\redis\0.8.2\package.tgz
288 silly lockFile c99e0b31-pm-cache-redis-0-8-2-package-tgz C:\Users\gaultier\AppData\Roaming\npm-cache\redis\0.8.2\package.tgz
289 info preinstall redis@0.8.2
290 verbose from cache C:\wamp\www\git\Skillico\enchere-node-server\node_modules\redis\package.json
291 verbose readDependencies using package.json deps
292 verbose from cache C:\wamp\www\git\Skillico\enchere-node-server\node_modules\redis\package.json
293 verbose readDependencies using package.json deps
294 silly resolved []
295 verbose about to build C:\wamp\www\git\Skillico\enchere-node-server\node_modules\redis
296 info build C:\wamp\www\git\Skillico\enchere-node-server\node_modules\redis
297 verbose from cache C:\wamp\www\git\Skillico\enchere-node-server\node_modules\redis\package.json
298 verbose linkStuff [ false,
298 verbose linkStuff   false,
298 verbose linkStuff   false,
298 verbose linkStuff   'C:\\wamp\\www\\git\\Skillico\\enchere-node-server\\node_modules' ]
299 info linkStuff redis@0.8.2
300 verbose linkBins redis@0.8.2
301 verbose linkMans redis@0.8.2
302 verbose rebuildBundles redis@0.8.2
303 info install redis@0.8.2
304 info postinstall redis@0.8.2
305 error hiredis@0.1.14 preinstall: `make || gmake`
305 error `cmd "/c" "make || gmake"` failed with 1
306 error Failed at the hiredis@0.1.14 preinstall script.
306 error This is most likely a problem with the hiredis package,
306 error not with npm itself.
306 error Tell the author that this fails on your system:
306 error     make || gmake
306 error You can get their info via:
306 error     npm owner ls hiredis
306 error There is likely additional logging output above.
307 error System Windows_NT 6.2.9200
308 error command "C:\\Program Files (x86)\\nodejs\\\\node.exe" "C:\\Program Files (x86)\\nodejs\\node_modules\\npm\\bin\\npm-cli.js" "install" "hiredis" "redis"
309 error cwd C:\wamp\www\git\Skillico\enchere-node-server
310 error node -v v0.8.19
311 error npm -v 1.2.10
312 error code ELIFECYCLE
313 verbose exit [ 1, true ]
